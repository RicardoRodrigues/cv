{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { cover } from 'polished';\nimport Logo from '../Logo';\nimport { fadeInBuilder, fadeOutBuilder } from '../../utils';\nconst Holder = styled.div.withConfig({\n  displayName: \"Loader__Holder\",\n  componentId: \"j83lno-0\"\n})([\"position:relative;\", \"\"], ({\n  isLoading\n}) => isLoading ? fadeInBuilder(3) : fadeOutBuilder(2));\nconst LogoWithAnimation = styled(Logo).withConfig({\n  displayName: \"Loader__LogoWithAnimation\",\n  componentId: \"j83lno-1\"\n})([\"display:flex;justify-content:center;align-items:center;\", \"\"], cover());\n\nconst Loader = ({\n  className,\n  fadeOutTime,\n  onLoaded,\n  onAnimationEnd\n}) => {\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(true);\n  useEffect(() => {\n    setTimeout(() => {\n      setIsLoading(false);\n      onLoaded && onLoaded();\n    }, 3000);\n  }, []);\n  useEffect(() => {\n    if (!isLoading) {\n      setTimeout(() => {\n        onAnimationEnd && onAnimationEnd();\n      }, fadeOutTime);\n    }\n  }, [isLoading]);\n  return __jsx(Holder, {\n    className: className,\n    isLoading: isLoading\n  }, __jsx(LogoWithAnimation, null));\n};\n\nexport default Loader;","map":null,"metadata":{},"sourceType":"module"}