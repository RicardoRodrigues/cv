{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { cover } from 'polished';\nimport Logo from '../Logo';\nimport { fadeInBuilder, fadeOutBuilder } from '../../utils';\nvar Holder = styled.div.withConfig({\n  displayName: \"Loader__Holder\",\n  componentId: \"j83lno-0\"\n})([\"position:relative;\", \"\"], function (_ref) {\n  var isLoading = _ref.isLoading;\n  return isLoading ? fadeInBuilder(3) : fadeOutBuilder(2);\n});\nvar LogoWithAnimation = styled(Logo).withConfig({\n  displayName: \"Loader__LogoWithAnimation\",\n  componentId: \"j83lno-1\"\n})([\"display:flex;justify-content:center;align-items:center;\", \"\"], cover());\n\nvar Loader = function Loader(_ref2) {\n  var className = _ref2.className,\n      fadeOutTime = _ref2.fadeOutTime,\n      onLoaded = _ref2.onLoaded,\n      onAnimationEnd = _ref2.onAnimationEnd;\n\n  var _useState = useState(true),\n      isLoading = _useState[0],\n      setIsLoading = _useState[1];\n\n  useEffect(function () {\n    setTimeout(function () {\n      setIsLoading(false);\n      onLoaded && onLoaded();\n    }, 3000);\n  }, []);\n  useEffect(function () {\n    if (!isLoading) {\n      setTimeout(function () {\n        onAnimationEnd && onAnimationEnd();\n      }, fadeOutTime);\n    }\n  }, [isLoading]);\n  return __jsx(Holder, {\n    className: className,\n    isLoading: isLoading\n  }, __jsx(LogoWithAnimation, null));\n};\n\nexport default Loader;","map":null,"metadata":{},"sourceType":"module"}