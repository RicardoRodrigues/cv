{"version":3,"file":"static/webpack/static/development/pages/index.js.116111c39d73dc057f22.hot-update.js","sources":["webpack:///./src/components/OverlayWithAnimation/index.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport styled from 'styled-components';\nimport { Animated, AnimationString } from 'react-animated-css';\nimport theme from '../../theme';\nimport {breakpointsInPx} from '../../media';\nimport ArrowButton from '../ArrowButton';\n\nconst HolderWithAnimation = styled(Animated)`\n  background: ${theme.palette.background.terciary};\n  width: 90vw;\n  height: 90vh;\n  padding: 5vh 5vw;\n  z-index: 9;\n  position: fixed;\n  max-height: 100vh;\n  overflow-y: auto;\n`;\n\nconst ContentHolder = styled.div`\n  max-width: ${breakpointsInPx.lg};\n  margin: auto;\n`;\n\ninterface IProps {\n  className?: string;\n  title: string;\n  isVisible: boolean;\n  onClose: () => void;\n  direction: 'Left' | 'Right';\n}\n\nconst OverlayWithAnimation: FC<IProps> = ({className, children, title, isVisible, onClose, direction}) => (\n  <HolderWithAnimation\n    className={className}\n    animationIn={`slideIn${direction}` as AnimationString}\n    animationOut={`slideOut${direction}` as AnimationString}\n    animationInDuration={1000}\n    animationOutDuration={1000}\n    isVisible={isVisible}\n    animateOnMount={false}\n  >\n    <ContentHolder>\n      <ArrowButton direction={direction} onClick={onClose} />\n      <h3>{title}</h3>\n      {children}\n    </ContentHolder>\n  </HolderWithAnimation>\n);\n\nexport default OverlayWithAnimation;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZA;AACA;AAiBA;;;;A","sourceRoot":""}